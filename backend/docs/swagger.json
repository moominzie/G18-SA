{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for SUT SE 2563",
        "title": "SUT SA Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/billingstatuss": {
            "get": {
                "description": "list billingstatus entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List billingstatus entities",
                "operationId": "list-billingstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Billingstatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create billingstatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create billingstatus",
                "operationId": "create-billingstatus",
                "parameters": [
                    {
                        "description": "Billingstatus entity",
                        "name": "billingstatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Billingstatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Billingstatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/billingstatuss/{id}": {
            "get": {
                "description": "get billingstatus by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a billingstatus entity by ID",
                "operationId": "get-billingstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Billingstatus ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Billingstatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bills": {
            "get": {
                "description": "list bill entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List bill entities",
                "operationId": "list-bill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bill"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create bill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create bill",
                "operationId": "create-bill",
                "parameters": [
                    {
                        "description": "Bill entity",
                        "name": "bill",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Bill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Bill"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/branch/{id}": {
            "delete": {
                "description": "get branch by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a branch entity by ID",
                "operationId": "delete-branch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/branchs": {
            "get": {
                "description": "list branch entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List branch entities",
                "operationId": "list-branch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Branch"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create branch",
                "operationId": "create-branch",
                "parameters": [
                    {
                        "description": "Branch entity",
                        "name": "branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Branch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Branch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/branchs/{id}": {
            "get": {
                "description": "get branch by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a branch entity by ID",
                "operationId": "get-branch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Branch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/building/{id}": {
            "delete": {
                "description": "get building by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a building entity by ID",
                "operationId": "delete-building",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Building ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/buildings": {
            "get": {
                "description": "list building entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List building entities",
                "operationId": "list-building",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Building"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create building",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create building",
                "operationId": "create-building",
                "parameters": [
                    {
                        "description": "Building entity",
                        "name": "building",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Building"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Building"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/buildings/{id}": {
            "get": {
                "description": "get building by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a building entity by ID",
                "operationId": "get-building",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Building ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Building"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/device/{id}": {
            "delete": {
                "description": "get device by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a device entity by ID",
                "operationId": "delete-device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/devices": {
            "get": {
                "description": "list device entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List device entities",
                "operationId": "list-device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Device"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create device",
                "operationId": "create-device",
                "parameters": [
                    {
                        "description": "Device entity",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Device"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/devices/{id}": {
            "get": {
                "description": "get device by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a device entity by ID",
                "operationId": "get-device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employee/{id}": {
            "delete": {
                "description": "get employee by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a employee entity by ID",
                "operationId": "delete-employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "list employee entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List employee entities",
                "operationId": "list-employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Employee"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create employee",
                "operationId": "create-employee",
                "parameters": [
                    {
                        "description": "Employee entity",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "description": "get employee by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a employee entity by ID",
                "operationId": "get-employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/faculty/{id}": {
            "delete": {
                "description": "get faculty by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a faculty entity by ID",
                "operationId": "delete-faculty",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Faculty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/facultys": {
            "get": {
                "description": "list faculty entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List faculty entities",
                "operationId": "list-faculty",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Faculty"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create faculty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create faculty",
                "operationId": "create-faculty",
                "parameters": [
                    {
                        "description": "Faculty entity",
                        "name": "faculty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Faculty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Faculty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/facultys/{id}": {
            "get": {
                "description": "get faculty by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a faculty entity by ID",
                "operationId": "get-faculty",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Faculty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Faculty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/repairinvoices": {
            "get": {
                "description": "list repairInvoice entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List repairInvoice entities",
                "operationId": "list-repairInvoice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.RepairInvoice"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create repairInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create repairInvoice",
                "operationId": "create-repairInvoice",
                "parameters": [
                    {
                        "description": "RepairInvoice entity",
                        "name": "repairInvoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RepairInvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.RepairInvoice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/repairinvoices/{id}": {
            "delete": {
                "description": "get repairInvoice by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a repairInvoice entity by ID",
                "operationId": "delete-repairInvoice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "RepairInvoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/returninvoices": {
            "get": {
                "description": "list returninvoice entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List returninvoice entities",
                "operationId": "list-returninvoice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Returninvoice"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create returninvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create returninvoice",
                "operationId": "create-returninvoice",
                "parameters": [
                    {
                        "description": "Returninvoice entity",
                        "name": "returninvoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Returninvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Returninvoice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/room/{id}": {
            "delete": {
                "description": "get room by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a room entity by ID",
                "operationId": "delete-room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "description": "list room entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List room entities",
                "operationId": "list-room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Room"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create room",
                "operationId": "create-room",
                "parameters": [
                    {
                        "description": "Room entity",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Room"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/rooms/{id}": {
            "get": {
                "description": "get room by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a room entity by ID",
                "operationId": "get-room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusr/{id}": {
            "delete": {
                "description": "get statusr by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a statusr entity by ID",
                "operationId": "delete-statusr",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "StatusR ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusrs": {
            "get": {
                "description": "list statusr entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List statusr entities",
                "operationId": "list-statusr",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.StatusR"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create statusr",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create statusr",
                "operationId": "create-statusr",
                "parameters": [
                    {
                        "description": "StatusR entity",
                        "name": "statusr",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.StatusR"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.StatusR"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusrs/{id}": {
            "get": {
                "description": "get statusr by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a statusr entity by ID",
                "operationId": "get-statusr",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "StatusR ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.StatusR"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statust/{id}": {
            "delete": {
                "description": "get statust by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a statust entity by ID",
                "operationId": "delete-statust",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Statust ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusts": {
            "get": {
                "description": "list statust entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List statust entities",
                "operationId": "list-statust",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Statust"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create statust",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create statust",
                "operationId": "create-statust",
                "parameters": [
                    {
                        "description": "Statust entity",
                        "name": "statust",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Statust"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Statust"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusts/{id}": {
            "get": {
                "description": "get statust by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a statust entity by ID",
                "operationId": "get-statust",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Statust ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Statust"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/symptom/{id}": {
            "delete": {
                "description": "get symptom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a symptom entity by ID",
                "operationId": "delete-symptom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Symptom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/symptoms": {
            "get": {
                "description": "list symptom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List symptom entities",
                "operationId": "list-symptom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Symptom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create symptom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create symptom",
                "operationId": "create-symptom",
                "parameters": [
                    {
                        "description": "Symptom entity",
                        "name": "symptom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Symptom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Symptom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/symptoms/{id}": {
            "get": {
                "description": "get symptom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a symptom entity by ID",
                "operationId": "get-symptom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Symptom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Symptom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "list user entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List user entities",
                "operationId": "list-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create user",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "User entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "delete": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a user entity by ID",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Bill": {
            "type": "object",
            "properties": {
                "billingstatus": {
                    "type": "integer"
                },
                "employee": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "repairinvoice": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "controllers.RepairInvoice": {
            "type": "object",
            "properties": {
                "device": {
                    "type": "integer"
                },
                "rename": {
                    "type": "string"
                },
                "statusR": {
                    "type": "integer"
                },
                "symptom": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "controllers.Returninvoice": {
            "type": "object",
            "properties": {
                "addedtime": {
                    "type": "string"
                },
                "employee": {
                    "type": "integer"
                },
                "repairinvoice": {
                    "type": "integer"
                },
                "statust": {
                    "type": "integer"
                }
            }
        },
        "controllers.User": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "integer"
                },
                "building": {
                    "type": "integer"
                },
                "faculty": {
                    "type": "integer"
                },
                "personalID": {
                    "type": "string"
                },
                "personalName": {
                    "type": "string"
                },
                "room": {
                    "type": "integer"
                }
            }
        },
        "ent.Bill": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BillQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BillEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "price": {
                    "description": "Price holds the value of the \"price\" field.",
                    "type": "integer"
                },
                "time": {
                    "description": "Time holds the value of the \"time\" field.",
                    "type": "integer"
                }
            }
        },
        "ent.BillEdges": {
            "type": "object",
            "properties": {
                "billingstatus": {
                    "description": "Billingstatus holds the value of the Billingstatus edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Billingstatus"
                },
                "employee": {
                    "description": "Employee holds the value of the Employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "repairinvoice": {
                    "description": "Repairinvoice holds the value of the Repairinvoice edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RepairInvoice"
                }
            }
        },
        "ent.Billingstatus": {
            "type": "object",
            "properties": {
                "billingstatusname": {
                    "description": "Billingstatusname holds the value of the \"billingstatusname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BillingstatusQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BillingstatusEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.BillingstatusEdges": {
            "type": "object",
            "properties": {
                "billingstatuss": {
                    "description": "Billingstatuss holds the value of the billingstatuss edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bill"
                    }
                }
            }
        },
        "ent.Branch": {
            "type": "object",
            "properties": {
                "brname": {
                    "description": "Brname holds the value of the \"brname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BranchQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BranchEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.BranchEdges": {
            "type": "object",
            "properties": {
                "faculty": {
                    "description": "Faculty holds the value of the faculty edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Faculty"
                },
                "userInformations": {
                    "description": "UserInformations holds the value of the user_informations edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Building": {
            "type": "object",
            "properties": {
                "buname": {
                    "description": "Buname holds the value of the \"buname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BuildingQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BuildingEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.BuildingEdges": {
            "type": "object",
            "properties": {
                "rooms": {
                    "description": "Rooms holds the value of the rooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Room"
                    }
                },
                "userInformations": {
                    "description": "UserInformations holds the value of the user_informations edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Device": {
            "type": "object",
            "properties": {
                "Dname": {
                    "description": "Dname holds the value of the \"Dname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DeviceQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DeviceEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.DeviceEdges": {
            "type": "object",
            "properties": {
                "repairInformation": {
                    "description": "RepairInformation holds the value of the repair_information edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.RepairInvoice"
                    }
                }
            }
        },
        "ent.Employee": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EmployeeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.EmployeeEdges"
                },
                "employeeemail": {
                    "description": "Employeeemail holds the value of the \"employeeemail\" field.",
                    "type": "string"
                },
                "employeename": {
                    "description": "Employeename holds the value of the \"employeename\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                }
            }
        },
        "ent.EmployeeEdges": {
            "type": "object",
            "properties": {
                "employeebill": {
                    "description": "Employeebill holds the value of the employeebill edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bill"
                    }
                },
                "employees": {
                    "description": "Employees holds the value of the employees edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Returninvoice"
                    }
                }
            }
        },
        "ent.Faculty": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FacultyQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FacultyEdges"
                },
                "fname": {
                    "description": "Fname holds the value of the \"fname\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FacultyEdges": {
            "type": "object",
            "properties": {
                "branchs": {
                    "description": "Branchs holds the value of the branchs edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Branch"
                    }
                },
                "userInformations": {
                    "description": "UserInformations holds the value of the user_informations edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.RepairInvoice": {
            "type": "object",
            "properties": {
                "Rename": {
                    "description": "Rename holds the value of the \"Rename\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RepairInvoiceQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RepairInvoiceEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.RepairInvoiceEdges": {
            "type": "object",
            "properties": {
                "bill": {
                    "description": "Bill holds the value of the bill edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Bill"
                },
                "device": {
                    "description": "Device holds the value of the device edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Device"
                },
                "returninvoice": {
                    "description": "Returninvoice holds the value of the returninvoice edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Returninvoice"
                },
                "status": {
                    "description": "Status holds the value of the status edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusR"
                },
                "symptom": {
                    "description": "Symptom holds the value of the symptom edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Symptom"
                },
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Returninvoice": {
            "type": "object",
            "properties": {
                "addedtime": {
                    "description": "Addedtime holds the value of the \"addedtime\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ReturninvoiceQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ReturninvoiceEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ReturninvoiceEdges": {
            "type": "object",
            "properties": {
                "employee": {
                    "description": "Employee holds the value of the Employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "repairinvoice": {
                    "description": "Repairinvoice holds the value of the Repairinvoice edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RepairInvoice"
                },
                "statust": {
                    "description": "Statust holds the value of the Statust edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Statust"
                }
            }
        },
        "ent.Room": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "rname": {
                    "description": "Rname holds the value of the \"rname\" field.",
                    "type": "string"
                }
            }
        },
        "ent.RoomEdges": {
            "type": "object",
            "properties": {
                "building": {
                    "description": "Building holds the value of the building edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Building"
                },
                "userInformations": {
                    "description": "UserInformations holds the value of the user_informations edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.StatusR": {
            "type": "object",
            "properties": {
                "Sname": {
                    "description": "Sname holds the value of the \"Sname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatusRQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusREdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.StatusREdges": {
            "type": "object",
            "properties": {
                "repairInformation": {
                    "description": "RepairInformation holds the value of the repair_information edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.RepairInvoice"
                    }
                }
            }
        },
        "ent.Statust": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatustQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatustEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "statustname": {
                    "description": "Statustname holds the value of the \"statustname\" field.",
                    "type": "string"
                }
            }
        },
        "ent.StatustEdges": {
            "type": "object",
            "properties": {
                "statusts": {
                    "description": "Statusts holds the value of the statusts edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Returninvoice"
                    }
                }
            }
        },
        "ent.Symptom": {
            "type": "object",
            "properties": {
                "Syname": {
                    "description": "Syname holds the value of the \"Syname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the SymptomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SymptomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.SymptomEdges": {
            "type": "object",
            "properties": {
                "repairInformation": {
                    "description": "RepairInformation holds the value of the repair_information edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.RepairInvoice"
                    }
                }
            }
        },
        "ent.User": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the UserQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.UserEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "personalID": {
                    "description": "PersonalID holds the value of the \"personalID\" field.",
                    "type": "string"
                },
                "personalName": {
                    "description": "PersonalName holds the value of the \"personalName\" field.",
                    "type": "string"
                }
            }
        },
        "ent.UserEdges": {
            "type": "object",
            "properties": {
                "branch": {
                    "description": "Branch holds the value of the branch edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Branch"
                },
                "building": {
                    "description": "Building holds the value of the building edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Building"
                },
                "faculty": {
                    "description": "Faculty holds the value of the faculty edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Faculty"
                },
                "repairinvoiceInformations": {
                    "description": "RepairinvoiceInformations holds the value of the repairinvoice_informations edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.RepairInvoice"
                    }
                },
                "room": {
                    "description": "Room holds the value of the room edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Room"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}